package com.ph.nabla_typemath

class SymbolMaps {

    val subscriptMap : LinkedHashMap<Char, Char> = linkedMapOf(
        '0' to '₀',
        '1' to '₁',
        '2' to '₂',
        '3' to '₃',
        '4' to '₄',
        '5' to '₅',
        '6' to '₆',
        '7' to '₇',
        '8' to '₈',
        '9' to '₉',
        '+' to '₊',
        '-' to '₋',
        '=' to '₌',
        '(' to '₍',
        ')' to '₎',
        '<' to '˱',
        '>' to '˲',
        'a' to 'ₐ',
        'b' to 'ᵦ',
        'e' to 'ₑ',
        'h' to 'ₕ',
        'i' to 'ᵢ',
        'j' to 'ⱼ',
        'k' to 'ₖ',
        'l' to 'ₗ',
        'm' to 'ₘ',
        'n' to 'ₙ',
        'o' to 'ₒ',
        'p' to 'ₚ',
        'r' to 'ᵣ',
        's' to 'ₛ',
        't' to 'ₜ',
        'u' to 'ᵤ',
        'v' to 'ᵥ',
        'x' to 'ₓ',
        'y' to 'ᵧ',
    )
    val superscriptMap : LinkedHashMap<Char, Char> = linkedMapOf(
        '0' to '⁰',
        '1' to '¹',
        '2' to '²',
        '3' to '³',
        '4' to '⁴',
        '5' to '⁵',
        '6' to '⁶',
        '7' to '⁷',
        '8' to '⁸',
        '9' to '⁹',
        '+' to '⁺',
        '-' to '⁻',
        '=' to '⁼',
        '(' to '⁽',
        ')' to '⁾',
        '<' to '˂',
        '>' to '˃',
        'a' to 'ᵃ',
        'b' to 'ᵇ',
        'c' to 'ᶜ',
        'd' to 'ᵈ',
        'e' to 'ᵉ',
        'f' to 'ᶠ',
        'g' to 'ᵍ',
        'h' to 'ʰ',
        'i' to 'ⁱ',
        'j' to 'ʲ',
        'k' to 'ᵏ',
        'l' to 'ˡ',
        'm' to 'ᵐ',
        'n' to 'ⁿ',
        'o' to 'ᵒ',
        'p' to 'ᵖ',
        'q' to 'ᶿ',
        'r' to 'ʳ',
        's' to 'ˢ',
        't' to 'ᵗ',
        'u' to 'ᵘ',
        'v' to 'ᵛ',
        'w' to 'ʷ',
        'x' to 'ˣ',
        'y' to 'ʸ',
        'z' to 'ᶻ',
        'A' to 'ᴬ',
        'B' to 'ᴮ',
        'C' to 'ᶜ',
        'D' to 'ᴰ',
        'E' to 'ᴱ',
        'F' to 'ᶠ',
        'G' to 'ᴳ',
        'H' to 'ᴴ',
        'I' to 'ᴵ',
        'J' to 'ᴶ',
        'K' to 'ᴷ',
        'L' to 'ᴸ',
        'M' to 'ᴹ',
        'N' to 'ᴺ',
        'O' to 'ᴼ',
        'P' to 'ᴾ',
        'Q' to 'ᶿ',
        'R' to 'ᴿ',
        'S' to 'ˢ',
        'T' to 'ᵀ',
        'U' to 'ᵁ',
        'V' to 'ⱽ',
        'W' to 'ᵂ',
        'X' to 'ˣ',
        'Y' to 'ʸ',
        'Z' to 'ᶻ'
    )
    val symbolGreekMap : LinkedHashMap<String, String> = linkedMapOf(
        "alpha" to "α",
        "beta" to "β",
        "gamma" to "γ",
        "delta" to "δ",
        "epsilon" to "ϵ",
        "varepsilon" to "ε",
        "zeta" to "ζ",
        "eta" to "η",
        "theta" to "θ",
        "vartheta" to "ϑ",
        "iota" to "ι",
        "kappa" to "κ",
        "lambda" to "λ",
        "mu" to "μ",
        "nu" to "ν",
        "xi" to "ξ",
        "pi" to "π",
        "rho" to "ρ",
        "sigma" to "σ",
        "varsigma" to "ς",
        "tau" to "τ",
        "upsilon" to "ϒ",
        "phi" to "ϕ",
        "varphi" to "φ",
        "chi" to "χ",
        "psi" to "ψ",
        "omega" to "ω",
        "Gamma" to "Γ",
        "Delta" to "Δ",
        "Theta" to "Θ",
        "Lambda" to "Λ",
        "Ksi" to "Ξ",
        "Pi" to "Π",
        "Sigma" to "Σ",
        "Upsilon" to "Υ",
        "Phi" to "Φ",
        "Psi" to "Ψ",
        "Omega" to "Ω",
    )
    val symbolSetAndLogicMap : LinkedHashMap<String, String> = linkedMapOf(
        "emptyset" to "∅",
        "mid" to "∣",
        "vert" to "|",
        "cup" to "∪",
        "cap" to "∩",
        "times" to "×",
        "subset" to "⊂",
        "subseteq" to "⊆",
        "supset" to "⊃",
        "supseteq" to "⊇",
        "notsubset" to "⊄",
        "notsupset" to "⊅",
        "in" to "∈",
        "notin" to "∉",
        "ni" to "∋",
        "owns" to "∋",
        "notni" to "∌",
        "aleph" to "ℵ",
        "beth" to "ℶ",
        "wedge" to "∧",
        "vee" to "∨",
        "not" to "¬",
        "forall" to "∀",
        "exists" to "∃",
        "nexists" to "∄",
    )
    val symbolDomainMap : LinkedHashMap<String, String> = linkedMapOf(
        "CC" to "ℂ",
        "HH" to "ℍ",
        "NN" to "ℕ",
        "QQ" to "ℚ",
        "RR" to "ℝ",
        "ZZ" to "ℤ",
        "DD" to "ⅅ",
        "PP" to "ℙ",
        "PiPi" to "ℿ",
        "GammaGamma" to "ℾ",
    )
    val symbolEqualityMap : LinkedHashMap<String, String> = linkedMapOf(
        "neq" to "≠",
        "=/=" to "≠",
        "equiv" to "≡",
        "==" to "≡",
        "approx" to "≈",
        "propto" to "∝",
        ">=" to "≥",
        "geq" to "≥",
        ">>" to "≫",
        "<=" to "≤",
        "leq" to "≤",
        "<<" to "≪",
        "simeq" to "≃",
        "cong" to "≅",
    )
    val symbolCalculusMap : LinkedHashMap<String, String> = linkedMapOf(
        "partial" to "∂",
        "dd" to "∂",
        "int" to "∫",
        "oint" to "∮",
        "iint" to "∬",
        "iiint" to "∭",
        "nabla" to "∇",
        "square" to "□",
    )
    val symbolMiscMap : LinkedHashMap<String, String> = linkedMapOf(
        "degree" to "°",
        "->" to "→",
        "<-" to "←",
        "sqrt" to "√",
        "nmid" to "∤",
        "perp" to "⊥",
        "cdot" to "⋅",
        "div" to "÷",
        "pm" to "±",
        "mp" to "∓",
        "circ" to "∘",
        "angle" to "∠",
        "oplus" to "⊕",
        "otimes" to "⊗",
        "oslash" to "⊘",
        "hbar" to "ℏ",
        "mho" to "℧",
        "endash" to "–",
        "--" to "–",
        "emdash" to "—",
        "---" to "—",
        "dots" to "…",
        "cdots" to "⋯",
        "vdots" to "⋮",
    )
    val vulgarFractionMap : HashMap<String, String> = linkedMapOf(
        "1/" to "⅟",
        "1/2" to "½",
        "1/3" to "⅓",
        "1/4" to "¼",
        "1/5" to "⅕",
        "1/6" to "⅙",
        "1/7" to "⅐",
        "1/8" to "⅛",
        "1/9" to "⅑",
        "1/10" to "⅒",
        "2/3" to "⅔",
        "2/5" to "⅖",
        "3/4" to "¾",
        "3/5" to "⅗",
        "3/8" to "⅜",
        "4/5" to "⅘",
        "5/6" to "⅚",
        "5/8" to "⅝",
        "7/8" to "⅞",
    )

}